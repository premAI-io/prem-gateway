// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: query.sql

package queries

import (
	"context"
	"database/sql"
)

const deleteDnsInfo = `-- name: DeleteDnsInfo :exec
DELETE FROM dns_info WHERE domain = $1
`

func (q *Queries) DeleteDnsInfo(ctx context.Context, domain string) error {
	_, err := q.db.Exec(ctx, deleteDnsInfo, domain)
	return err
}

const getDnsInfo = `-- name: GetDnsInfo :one
SELECT domain, sub_domain, ip, node_name, email FROM dns_info WHERE domain = $1
`

func (q *Queries) GetDnsInfo(ctx context.Context, domain string) (DnsInfo, error) {
	row := q.db.QueryRow(ctx, getDnsInfo, domain)
	var i DnsInfo
	err := row.Scan(
		&i.Domain,
		&i.SubDomain,
		&i.Ip,
		&i.NodeName,
		&i.Email,
	)
	return i, err
}

const getExistDnsInfo = `-- name: GetExistDnsInfo :one
SELECT domain, sub_domain, ip, node_name, email FROM dns_info
`

func (q *Queries) GetExistDnsInfo(ctx context.Context) (DnsInfo, error) {
	row := q.db.QueryRow(ctx, getExistDnsInfo)
	var i DnsInfo
	err := row.Scan(
		&i.Domain,
		&i.SubDomain,
		&i.Ip,
		&i.NodeName,
		&i.Email,
	)
	return i, err
}

const insertDnsInfo = `-- name: InsertDnsInfo :exec

INSERT INTO dns_info(domain, sub_domain, ip, node_name, email) VALUES ($1, $2, $3, $4, $5)
`

type InsertDnsInfoParams struct {
	Domain    string
	SubDomain sql.NullString
	Ip        sql.NullString
	NodeName  sql.NullString
	Email     sql.NullString
}

// DNS_INFO
func (q *Queries) InsertDnsInfo(ctx context.Context, arg InsertDnsInfoParams) error {
	_, err := q.db.Exec(ctx, insertDnsInfo,
		arg.Domain,
		arg.SubDomain,
		arg.Ip,
		arg.NodeName,
		arg.Email,
	)
	return err
}

const updateDnsInfo = `-- name: UpdateDnsInfo :exec
UPDATE dns_info SET sub_domain = $1, ip = $2, node_name = $3, email = $4 WHERE domain = $5
`

type UpdateDnsInfoParams struct {
	SubDomain sql.NullString
	Ip        sql.NullString
	NodeName  sql.NullString
	Email     sql.NullString
	Domain    string
}

func (q *Queries) UpdateDnsInfo(ctx context.Context, arg UpdateDnsInfoParams) error {
	_, err := q.db.Exec(ctx, updateDnsInfo,
		arg.SubDomain,
		arg.Ip,
		arg.NodeName,
		arg.Email,
		arg.Domain,
	)
	return err
}
